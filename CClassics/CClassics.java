/**
 * ICS4UR Computer Science, 12 
 * Brampton, Canada
 *
 * https://github.com/HarisK03/
 * https://repl.it/@HarisKamal
 *
 * modified     20201023
 * date         20201020
 * @filename	CClassics.java
 * @author      hkamal
 * @version     1.0
 * @see         CClasics program Assignment 3.3 - use linear and binary search
 */

import java.util.ArrayList;
import java.io.*;
import javax.swing.JOptionPane;

public class CClassics extends javax.swing.JFrame {
    ArrayList<String> books = new ArrayList<>();
    ArrayList<String> bookNums = new ArrayList<>();
    ArrayList<String> bookNames = new ArrayList<>();
    
    /** Creates new form CClassics */
    public CClassics() {
        initComponents();
        bookListLoad();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblH1 = new javax.swing.JLabel();
        lblH2 = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        btnIn = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        refIn = new javax.swing.JTextField();
        lblRef = new javax.swing.JLabel();
        lblBinary = new javax.swing.JLabel();
        lblLinear = new javax.swing.JLabel();
        display2 = new javax.swing.JTextField();
        display1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblH1.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        lblH1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblH1.setText("This program will find the title of a book according to the library reference number.");

        lblH2.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        lblH2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblH2.setText("The program will use a Binary Search and a Linear Search.");

        lblTitle.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 0, 0));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Children's Classics");

        btnIn.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        btnIn.setText("Find It!");
        btnIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInActionPerformed(evt);
            }
        });

        btnExit.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        refIn.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        refIn.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lblRef.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblRef.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRef.setText("Enter The Reference #:");

        lblBinary.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblBinary.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblBinary.setText("Binary Search:");

        lblLinear.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblLinear.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLinear.setText("Linear Search:");

        display2.setEditable(false);
        display2.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        display2.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        display1.setEditable(false);
        display1.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        display1.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblH1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblRef, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(refIn, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(165, 165, 165)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(lblH2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblBinary, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(lblLinear, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(231, 231, 231)
                                        .addComponent(btnExit))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(70, 70, 70)
                                        .addComponent(display2, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(69, 69, 69)
                                .addComponent(display1, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(219, 219, 219)
                                .addComponent(btnIn)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(lblH1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblH2)
                .addGap(30, 30, 30)
                .addComponent(lblRef, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(refIn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnIn)
                .addGap(28, 28, 28)
                .addComponent(lblLinear, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(display1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(lblBinary, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(display2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnExit)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInActionPerformed
        try {
            int refCheck = Integer.parseInt(refIn.getText());
            String ref = Integer.toString(refCheck);
            linear(ref);
            display2.setText(bookNames.get(binary(bookNums, 0, bookNums.size()-1, ref)));
        }
        catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Invalid input!");
            return;
        }
        catch (IndexOutOfBoundsException e) {
            // do nothing
        }
    }//GEN-LAST:event_btnInActionPerformed

    // exit
    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed
    
    // load ArrayLists - src: https://stackoverflow.com/questions/5343689/java-reading-a-file-into-an-arraylist
    public void bookListLoad() {
        try {
            BufferedReader reader;
            reader = new BufferedReader(new FileReader("Booklist.txt"));
            String line = reader.readLine();
            while (line != null) {
                books.add(line);
                line = reader.readLine();
            }
            reader.close();
            for (int i = 0; i < books.size(); i++) {
                if (i % 2 == 0) {
                    bookNums.add(books.get(i));
                }
                else {
                    bookNames.add(books.get(i));
                }
            }
        }
        catch (Exception e) {
            // do nothing
        }
    }
    
    // linear search
    private void linear(String ref) {
        for (int i = 0; i < books.size(); i++) {
            if (books.get(i).equalsIgnoreCase(ref)) {
                display1.setText(books.get(i+1));
                return;
            }
        }
        JOptionPane.showMessageDialog(null, "The book was not found!");
        return;
    }
    
    // binary search - src: https://www.youtube.com/watch?v=hKI93hOfeIk
    private int binary(ArrayList<String> bookNums, int left, int right, String target) {
        if (left <= right) {
            int middle = (left + right) / 2;
            if (Integer.parseInt(target) < Integer.parseInt(bookNums.get(middle))) {
                return binary(bookNums, left, middle - 1, target);
            }
            else if (Integer.parseInt(target) > Integer.parseInt(bookNums.get(middle))) {
                return binary(bookNums, middle + 1, right, target);
            }
            else {
                return middle;
            }
        }
        return -1;
        // redundant error message (found in linear method)
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CClassics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CClassics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CClassics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CClassics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CClassics().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnIn;
    private javax.swing.JTextField display1;
    private javax.swing.JTextField display2;
    private javax.swing.JLabel lblBinary;
    private javax.swing.JLabel lblH1;
    private javax.swing.JLabel lblH2;
    private javax.swing.JLabel lblLinear;
    private javax.swing.JLabel lblRef;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField refIn;
    // End of variables declaration//GEN-END:variables

}
