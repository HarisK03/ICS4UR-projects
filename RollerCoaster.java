/**
 * ICS4UR Computer Science, 12 
 * Brampton, Canada
 *
 * https://github.com/HarisK03/
 * https://repl.it/@HarisKamal
 *
 * modified     20201009
 * date         20200927
 * @filename	RollerCoaster.java
 * @author      hkamal
 * @version     1.1
 * @see         RollerCoaster program assignment 1.5 - verify if you are able to ride the rollercoaster
 */

public class RollerCoaster extends javax.swing.JFrame {

    /**
     * Creates new form RollerCoasterr
     */
    public RollerCoaster() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        RollerCoasterTitle = new javax.swing.JLabel();
        lblHeight = new javax.swing.JLabel();
        lblBack = new javax.swing.JLabel();
        lblHeart = new javax.swing.JLabel();
        tfHeight = new javax.swing.JTextField();
        tfBack = new javax.swing.JTextField();
        tfHeart = new javax.swing.JTextField();
        display = new javax.swing.JTextField();
        btnCalculate = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        RollerCoasterTitle.setBackground(new java.awt.Color(255, 0, 0));
        RollerCoasterTitle.setFont(new java.awt.Font("Open Sans", 0, 24)); // NOI18N
        RollerCoasterTitle.setForeground(new java.awt.Color(255, 0, 0));
        RollerCoasterTitle.setText("RollerCoaster Ride");

        lblHeight.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblHeight.setText("Height in cm?");

        lblBack.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblBack.setText("Back Trouble (Y/N)?");

        lblHeart.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblHeart.setText("Heart Trouble (Y/N)?");

        tfHeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfHeightActionPerformed(evt);
            }
        });

        tfHeart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfHeartActionPerformed(evt);
            }
        });

        display.setEditable(false);
        display.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        display.setText("Find out if you can ride this RollerCoaster!");
        display.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayActionPerformed(evt);
            }
        });

        btnCalculate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCalculate.setText("Calculate");
        btnCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculateActionPerformed(evt);
            }
        });

        btnExit.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnCalculate)
                                .addGap(55, 55, 55)
                                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblHeart)
                                    .addComponent(lblHeight)
                                    .addComponent(lblBack))
                                .addGap(107, 107, 107)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfBack, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfHeart, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(display, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(RollerCoasterTitle)))
                .addContainerGap(71, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(RollerCoasterTitle)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHeight)
                    .addComponent(tfHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBack)
                    .addComponent(tfBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHeart)
                    .addComponent(tfHeart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(display, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCalculate)
                    .addComponent(btnExit))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfHeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfHeightActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfHeightActionPerformed

    private void tfHeartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfHeartActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfHeartActionPerformed

    private void displayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_displayActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculateActionPerformed
        try {
            // declare variables from textfields
            int height = Integer.parseInt(tfHeight.getText());
            String back = tfBack.getText();
            String heart = tfHeart.getText();
            
            // within cm range: 122 - 188
            if (height < 122 || height > 188) {
                // can not have negative height; invalid input
                if (height < 0) {
                    display.setText("Invalid Input.");
                }
                // valid input for textfield 2 and 3
                else if ((back.length() == 1 && heart.length() == 1) && (back.equalsIgnoreCase("Y") || heart.equalsIgnoreCase("Y") || back.equalsIgnoreCase("N") && heart.equalsIgnoreCase("N"))) {
                    display.setText("You are NOT allowed.");
                }
                // invalid input for textfield 2 and 3
                else {
                    display.setText("Invalid Input.");
                }
            }
            
            // check for back pain or heart pain
            else {
                if (back.equalsIgnoreCase("Y") || heart.equalsIgnoreCase("Y")) {
                    display.setText("You are NOT allowed.");
                }
                // no problems
                else if (back.equalsIgnoreCase("N") && heart.equalsIgnoreCase("N")) {
                    display.setText("You are ALLOWED.");
                }
                // if textfield 2 or 3 doesn't equal y or n 
                else {
                    display.setText("Invalid Input.");
                }
            }
        }
        
        // handle exception for invalid inputs in height
        catch (Exception e) {
            display.setText("Invalid Input.");
        }
    }//GEN-LAST:event_btnCalculateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RollerCoaster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RollerCoaster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RollerCoaster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RollerCoaster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RollerCoaster().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel RollerCoasterTitle;
    private javax.swing.JButton btnCalculate;
    private javax.swing.JButton btnExit;
    private javax.swing.JTextField display;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel lblBack;
    private javax.swing.JLabel lblHeart;
    private javax.swing.JLabel lblHeight;
    private javax.swing.JTextField tfBack;
    private javax.swing.JTextField tfHeart;
    private javax.swing.JTextField tfHeight;
    // End of variables declaration//GEN-END:variables
}
